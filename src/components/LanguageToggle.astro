---
import USAFlag from './icons/USAFlag.astro'
import SpainFlag from './icons/SpainFlah.astro'
import ItalyFlag from './icons/ItalyFlag.astro'

const LANGUAGES = {
  ENGLISH: { id: 'english', label: 'English' },
  SPANISH: { id: 'spanish', label: 'Espa√±ol' },
  ITALIAN: { id: 'italian', label: 'Italiano' }
}
---

<div class='relative ml-1 mr-1'>
  <button
    id='lang-toggle-btn'
    class='appearance-none border-none flex hover:scale-125 transition'
  >
    <span class='sr-only'>Select language</span>
    <ItalyFlag
      id={LANGUAGES.ITALIAN.id}
      class='lang-toggle-icon absolute size-5 transition-all'
    />

    <SpainFlag
      id={LANGUAGES.SPANISH.id}
      class='lang-toggle-icon size-5 transition-all'
    />
    <USAFlag
      id={LANGUAGES.ENGLISH.id}
      class='lang-toggle-icon absolute size-5 transition-all'
    />
  </button>
  <div
    id='langs-menu'
    class='absolute hidden scale-80 top-8 right-0 text-sm p-1 min-w-[8rem] rounded-md border border-gray-100 bg-white/90 dark:bg-gray-900/90 dark:border-gray-500/20 shadow-[0_3px_10px_rgb(0,0,0,0.2)] backdrop-blur-md'
  >
    <ul>
      {
        Object.values(LANGUAGES).map((lang) => (
          <li
            id={lang.id}
            class='langs-menu-option px-2 py-1.5 cursor-default hover:bg-neutral-400/40 dark:hover:bg-gray-500/50 rounded-sm'
          >
            {lang.label}
          </li>
        ))
      }
    </ul>
  </div>
</div>

<style>
  #langs-menu.open {
    display: inline;
    animation: scale-up-center 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
  }

  @keyframes scale-up-center {
    from {
      transform: scale(0.8);
      opacity: 0;
    }

    to {
      transform: scale(1);
      opacity: 1;
    }
  }
</style>

<script is:inline>
  const langsMenu = document.getElementById('langs-menu')

  const getLangPreference = () => {
    if (typeof localStorage !== 'undefined') {
      return localStorage.getItem('lang') ?? 'english'
    }
  }

  const updateLangIcon = (langPreference) => {
    document.querySelectorAll('.lang-toggle-icon').forEach((element) => {
      element.style.scale = element.id === langPreference ? '1' : '0'
    })
  }

  const updateLang = () => {
    const langPreference = getLangPreference()

    updateLangIcon(langPreference)

    const currentPath = window.location.pathname

    let redirectPath = '/'
    if (langPreference === 'spanish') {
      redirectPath = '/es'
    } else if (langPreference === 'italian') {
      redirectPath = '/it'
    }

    if (currentPath !== redirectPath) {
      window.location.href = redirectPath
    }
  }

  updateLang()

  document.addEventListener('click', () => langsMenu.classList.remove('open'))

  document.getElementById('lang-toggle-btn').addEventListener('click', (e) => {
    e.stopPropagation()
    const isClosed = !langsMenu.classList.contains('open')
    langsMenu.classList[isClosed ? 'add' : 'remove']('open')
  })

  document.querySelectorAll('.langs-menu-option').forEach((element) => {
    element.addEventListener('click', (e) => {
      localStorage.setItem('lang', e.target.id.toLowerCase().trim())
      updateLang()
    })
  })
</script>
