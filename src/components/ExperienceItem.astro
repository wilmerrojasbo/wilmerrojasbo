---
import LinkButton from './LinkButton.astro'
import Arrow from './icons/Arrow.astro'
import { getI18N } from '../i18n'

interface Props {
  title: string
  description?: string
  responsabilities: string[]
  accomplishments: string[]
  link?: string
  date: string
}

const { title, description, link, date, responsabilities, accomplishments } =
  Astro.props

const { currentLocale } = Astro
const i18n = getI18N({ currentLocale })
---

<div
  class='absolute w-3 h-3 rounded-full mt-1.5 -start-1.5 border border-gray-900 bg-gray-700'
>
</div>
<div class='bg-gray-300 dark:bg-gray-900 text-white p-4 rounded-lg'>
  <div class='flex justify-between items-center'>
    <div>
      <time
        class='mb-1 text-sm font-normal leading-none text-sky-800 dark:text-sky-200/80'
        >{date}</time
      >
      <h2
        class='text-base lg:text-lg font-semibold text-gray-800 dark:text-gray-100 mt-2'
      >
        {title}
      </h2>
      <p class='text-sm text-gray-700 dark:text-gray-400'>
        {description}
      </p>
    </div>
    <button
      class='toggle-button text-slate-800 dark:text-white bg-white/5 mt-5
    border dark:border-white/10 border-gray-300
    rounded-full
    inline-flex justify-center items-center gap-x-2
    py-1 px-2 md:py-2 md:px-4
    text-xs
    transition
    hover:scale-110 hover:bg-white/10'
    >
      <span>{i18n.DETAILS_LABEL}</span>
      <span class='ml-2 arrow'
        ><Arrow class='w-3 h-3 ms-2 rtl:rotate-180' /></span
      >
    </button>
  </div>
  <div
    class='collapsible-content mt-4 hidden transition-all duration-300 ease-in-out'
  >
    <h3 class='text-sky-800 dark:text-sky-200/80 text-base'>
      {i18n.RESPONSABILITIES_LABEL}
    </h3>
    <ul class='text-base list-disc ml-10 text-slate-800 dark:text-white'>
      {responsabilities.map((resp) => <li>{resp}</li>)}
    </ul>
    <h3 class='text-sky-800 dark:text-sky-200/80 text-base mt-3'>
      {i18n.KEY_ACCOMP_LABEL}
    </h3>
    <ul class='text-base list-disc ml-10 text-slate-800 dark:text-white'>
      {accomplishments.map((accom) => <li>{accom}</li>)}
    </ul>
    {
      link && (
        <LinkButton href={link}>
          Website
          <svg
            class='w-3 h-3 ms-2 rtl:rotate-180'
            aria-hidden='true'
            fill='none'
            viewBox='0 0 14 10'
          >
            <path
              stroke='currentColor'
              stroke-linecap='round'
              stroke-linejoin='round'
              stroke-width='2'
              d='M1 5h12m0 0L9 1m4 4L9 9'
            />
          </svg>
        </LinkButton>
      )
    }
  </div>
</div>

<script>
  document.querySelectorAll('.toggle-button').forEach((button, index) => {
    const content = document.querySelectorAll('.collapsible-content')[index]
    /*const arrow = button.querySelector('.arrow')

    if (button && content) {
      button.addEventListener('click', function () {
        if (content.classList.contains('hidden')) {
          content.classList.remove('hidden')
          button.textContent = 'Hide Details'
        } else {
          content.classList.add('hidden')
          button.textContent = 'Show Details'
        }
      })
    }*/
    if (button && content) {
      const arrow = button.querySelector('.arrow')

      if (arrow) {
        button.addEventListener('click', function () {
          if (content.classList.contains('hidden')) {
            content.classList.remove('hidden')
            arrow.innerHTML = `<svg
            class='w-3 h-3 ms-2 rotate-90'
            aria-hidden='true'
            fill='none'
            viewBox='0 0 14 10'
          >
            <path
              stroke='currentColor'
              stroke-linecap='round'
              stroke-linejoin='round'
              stroke-width='2'
              d='M1 5h12m0 0L9 1m4 4L9 9'
            />
          </svg>`
          } else {
            content.classList.add('hidden')
            arrow.innerHTML = `<svg
            class='w-3 h-3 ms-2 rtl:rotate-180'
            aria-hidden='true'
            fill='none'
            viewBox='0 0 14 10'
          >
            <path
              stroke='currentColor'
              stroke-linecap='round'
              stroke-linejoin='round'
              stroke-width='2'
              d='M1 5h12m0 0L9 1m4 4L9 9'
            />
          </svg>`
          }
        })
      }
    }
  })
</script>
